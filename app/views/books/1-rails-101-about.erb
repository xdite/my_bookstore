<% @page_title = "About this book"%>
<% unless params[:locale]%>
    <h2>Why write this book</h2>

    <p>I have been learning Rails since 2007. The version of Rails was 1.2.6.
    I was a System Administrator at that time. </p>

    <p>Since high school, I have fallen in love with writing websites with CGI / PHP. There were a bunch of crazy ideas in my head. But It is a pity that my development speed can’t catch my brain. </p>

    <p>I was passionate about building stuffs. But the development speed is always serious problem. It took too long to write a websites using PHP. It buried my passion.
    Till I met Rails...</p>

    <p>Rails changes my entire world. </p>

    <p>At the beginning, I bought some books from internet. Learn to build my first Rails site. I even bought a MacBook ( It cost me over a month salary in 2007 ...>_&lt;) . Just try to best to learn Ruby.</p>

    <p>Rails for me is very difficult to learn at that time ( lots of hidden conventions)...</p>

    <p>I managed  to write websites as exercises. One day in 2008, one friend asked me to build a custom joke pic websites for fun. I think it’s not a big deal, then spent two weeks on it. When the site came out, people on internet in Taiwan went crazy. The pageviews was extremely high.</p>

    <p>On that day I knew, Rails can help me fulfill my dream
    I quit my job 3 months later, to become a Rails developer. Because I really loved the feeling of building websites that people love.</p>

    <p>People on internet hates Rails, the reason is all about “hard to learn”, “can’t write code in their way”, “annoying hidden conventions”, “bad performance”....
    But be honest, I must say that’s because they don’t know about Rails. The truth is once you pass the first stage of learning Rails. You will think  you are should have done that earlier.</p>

    <p>Rails is a cutting-edge web framework, create lots of best practices. I learn a lot of techniques and practical solutions from learning Rails. Those knowledges in the  past you can only learn from big company or large scale websites.
    The steep learning curve of Rails is the reason that the community can’t grow too fast. (in Taiwan, that’s a lot people only want learn from Chinese Book, but the truth is Rails books expire so fast ...) </p>

    <p>Everybody wants to hire Rails developer, but we don’t have enough developers to supply. </p>

    <p>Once in my career change, my boss said I can leave only if I find another qualified developer to fill my position. I failed, there are not too many candidates in my country, they are either not qualified or the pay is too high.</p>

    <p>Finally I made a decision: TRAIN PEOPLE BY MYSELF.</p>

    <p>I started to recall how I learned Rails. What were the most painful problems for newbie to learn Rails? If I help newbie to conquer these problems, is it <strong>possible learn Rails only in weeks not years</strong>?</p>

    <p>Finally, I created these exercises.</p>

    <p>There are 7 exercises to fit in one week. Let new developer work on one for one day. At the end of day, I asked them did they have any problems? I helped them to solve, did the code review, helped them understand hidden conventions.<strong>Explain some very important techniques that you can only learn from practices.</strong>
    I have used these exercises to train lots of Rails developers in Taiwan. It’s a big success. They took form one week to two weeks to finish.</p>

    <p>You may be wondering they must all have special background, so they can learn so fast. Actually they didn’t, they only knew C/C++ before learning Rails, even had no ideas about how to write HTML /CSS before. They are all good Rails developers now.  </p>

    <p>Do you also want learn Rails ? I believe you can!</p>

    <p>The point of this book is not about READING exercises, <strong>it’s about DOING/ DEBUGGING, and  the code review.</strong></p>

    <p><em>Trust me, if you are new to Rails, it will take you more than 2 months to finish these exercises.(without reading the answers on this book)</em></p>

    <p>This book is originally from one of my blog post, but without answers. </p>

    <p>I gave a lot talks of Rails in Taiwan. In 2010, people from Taiwan open-source community hoped that I can write some Rails tutorial for newbies. </p>

    <p>I recalled that blog post. Suddenly I know exactly how to write a book for newbies. </p>

    <p>That’s why you have this book now.</p>
<% else %>
<h2>本書由來</h2>

<p>第一次接觸到 Rails，大概是 2007 年的時候，Rails 版號是 1.2.6 。</p>

<p>當時我的職業還是系統工程師，晚上寫寫文章的 blogger。自高中起，我就知道如何使用 cgi / PHP 寫網頁，用 FreeBSD 架 BBS。腦袋裡鬼點子很多，但開發的速度永遠跟不上大腦奔馳的速度，寫出來的總是個半調子的成品。</p>

<p>開發速度永遠是澆熄寫網站熱情的殺手。接觸到 Rails，改變了我的世界。我從網路上買了一些書，開始學習刻出我第一個 Rails Site，為此當初薪水不高的我，還忍痛花了超過一個月的薪水買了台 MacBook，立志就是學會 Rails。Rails 對當時的我實在很不好上手，非常多隱藏的 Convention（一直到現在都是）。寫了很多很多的練習作業後，有一天因為朋友的一句玩笑話，還不是很熟 Rails 的我，花了兩個禮拜幹出了 VeryXD。這個網站 PV 曾經一度非常非常高。</p>

<p>那時候我開始知道，Rails 也許可以幫助我的雙手，跟上大腦的速度。</p>

<p>我後來辭去了非常穩定的工作，跑去當 Rails Developer。因為我真的很喜歡寫出會讓大家喜歡或眼睛為之一亮的網站。</p>

<p>外界對 Rails 的評價一向不好，討厭的原因不外是上手困難、不能照自己想要的方式寫程式（一堆隱藏 convention）、效率糟糕...</p>

<p>但坦白說，我一直認為那是因為大家不了解 Rails。真實的狀況是：只要衝過了第一道門檻，你多半就會開始後悔自己為什麼這麼晚才接觸它。這是個走在時代尖端、創造了非常多 web best practices 的 framework。跟著它的成長，我從中學習到幾乎無窮無盡的開發技巧以及在大公司才可能學會的 best practices。</p>

<p>Rails 的新手學習曲線過陡一直是國內這個社群長不太大的原因（沒有太多中文文件，唯一的幾本中文文件太快 expire）。在我一次生涯跑道的轉換，上司提出只要找得到接手我工作的 Rails Developer 就放我走的條件。坦白說，門檻很高 ....(笑）。因為 qualified 的 Rails developer 真的不多，不管國內國外都是一樣....</p>

<p>在找過幾位朋友談過接手都失敗的情形之下，最後心理作出了最壞的打算，了不起我自己培養。我開始回想當初是怎麼學習 Rails 的，我在作過大大小小這麼多 Rails Project 時踩過哪些最痛的雷？這些雷是不是對新手成長最痛的門檻？要是幫新手弭平這些門檻，是不是可以把長達一年的摸索期，砍到只剩短短的幾個禮拜。</p>

<p>最後，誕生了這份作業。</p>

<p>我使用這份作業的方式，是每天拆一個小作業，讓新手自己摸索一天，每天下班時，詢問是否踩雷，然後從踩雷除雷、Code Review，幫助新手了解 Rails 隱藏的 code convention，還有一些非常重要但書上不會特別強調，唯有實戰才會學到的技巧。</p>

<p>我用這份作業訓練出了很多個 Rails Developer，最長的一個只花了兩週就上手了（第一次寫練習作業的實驗對象 XD），短的一週之內就可以上 production 跟我一起作事了。</p>

<p>也許讀者會以為，要具備什麼特殊背景才能學這麼快。其實也沒有，Rails Developer 真的很難找！所以我其實真的收過兩個連 HTML 都不太會寫，只會寫 C 的 Programmer，將他們轉職成 Rails Developer。他們兩位現在 Rails 都寫得還不錯...</p>

<p>你也想學 Rails 嗎？我相信你也學得起來。</p>

<p>這份速成培養 Rails Developer 的作業的重點其實不在題目，而在每日的除雷解答與 Code Review。從完全都不懂的新手，憑空硬幹要把這份作業寫完，花的時間絕對會遠超過兩個禮拜。</p>

<p>（這是當初沒跟大家講的一個梗，奸笑）</p>

<p>無論如何，有些朋友盧我出來開課造福大家。</p>

<p>但...目前我真的沒空，我正在 run 一個我相當喜歡的事業，每天的心神都投在上面了。</p>

<p>唯一能想到的折衷點是，不如我重新寫過這一份作業，附上解答與講解，再次釋出。</p>

<p>這就是這本書的由來。</p>

<% end %>